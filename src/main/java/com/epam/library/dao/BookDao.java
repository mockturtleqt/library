package com.epam.library.dao;

import com.epam.library.dao.exception.DaoException;
import com.epam.library.domain.Book;

import java.sql.Connection;
import java.util.List;

public abstract class BookDao {
//    private static final String ID = "id";
//    private static final String TITLE = "title";
//    private static final String PUBLICATION_YEAR = "publish_year";
//    private static final String AUTHOR = "author";

    protected Connection connection;

    public BookDao() {
    }

    public BookDao(Connection connection) {
        this.connection = connection;
    }

    public abstract Book create(Book book) throws DaoException;

    public abstract Book findById(int id) throws DaoException;

    public abstract Book update(Book book) throws DaoException;

    public abstract void deleteById(int id) throws DaoException;

    public abstract Book findByTitle(String title) throws DaoException;

    public abstract List<Book> findAll() throws DaoException;

    public void setConnection(Connection connection) {
        this.connection = connection;
    }

//    public Book create(Book book) throws DaoException {
//        try (PreparedStatement preparedStatement = connection.prepareStatement(SQL_INSERT_BOOK, Statement.RETURN_GENERATED_KEYS)) {
//            preparedStatement.setString(1, book.getTitle());
//            preparedStatement.setInt(2, book.getYear());
//            preparedStatement.setString(3, book.getAuthor());
//            preparedStatement.executeUpdate();
//
//            //getting the autogenerated id
//            ResultSet generatedKeys = preparedStatement.getGeneratedKeys();
//            if (generatedKeys.next()) {
//                book.setId(generatedKeys.getInt(1));
//            }
//            return book;
//        } catch (SQLException e) {
//            throw new DaoException(e);
//        }
//    }
//
//    public Book findById(int id) throws DaoException {
//        Book book = null;
//        try (PreparedStatement preparedStatement = connection.prepareStatement(SQL_SELECT_BOOK_BY_ID)) {
//            preparedStatement.setInt(1, id);
//            ResultSet resultSet = preparedStatement.executeQuery();
//            while (resultSet.next()) {
//                book = createBookFromResultSet(resultSet);
//            }
//            return book;
//        } catch (SQLException e) {
//            throw new DaoException(e);
//        }
//    }
//
//    public Book update(Book book) throws DaoException {
//        try (PreparedStatement preparedStatement = connection.prepareStatement(SQL_UPDATE_BOOK)) {
//            preparedStatement.setString(1, book.getTitle());
//            preparedStatement.setInt(2, book.getId());
//            preparedStatement.executeUpdate();
//            return book;
//        } catch (SQLException e) {
//            throw new DaoException(e);
//        }
//    }
//
//    public void deleteById(int id) throws DaoException {
//        try (PreparedStatement preparedStatement = connection.prepareStatement(SQL_DELETE_BOOK)) {
//            preparedStatement.setInt(1, id);
//            preparedStatement.executeUpdate();
//
//        } catch (SQLException e) {
//            throw new DaoException(e);
//        }
//    }
//
//    public Book findByTitle(String title) throws DaoException {
//        Book book = null;
//        try (PreparedStatement preparedStatement = connection.prepareStatement(SQL_SELECT_BOOK_BY_TITLE)) {
//            preparedStatement.setString(1, title);
//            ResultSet resultSet = preparedStatement.executeQuery();
//            while (resultSet.next()) {
//                book = createBookFromResultSet(resultSet);
//            }
//            return book;
//        } catch (SQLException e) {
//            throw new DaoException(e);
//        }
//    }
//
//    public List<Book> findAll() throws DaoException {
//        List<Book> books = new ArrayList<>();
//        try (Statement statement = connection.createStatement()) {
//            ResultSet resultSet = statement.executeQuery(SQL_SELECT_ALL_BOOKS);
//            while (resultSet.next()) {
//                books.add(createBookFromResultSet(resultSet));
//            }
//        } catch (SQLException e) {
//            throw new DaoException(e);
//        }
//        return books;
//    }
//
//    private Book createBookFromResultSet(ResultSet resultSet) throws SQLException {
//        Book book = new Book();
//        book.setId(resultSet.getInt(ID));
//        book.setTitle(resultSet.getString(TITLE));
//        book.setYear(resultSet.getInt(PUBLICATION_YEAR));
//        book.setAuthor(resultSet.getString(AUTHOR));
//        return book;
//    }
}
